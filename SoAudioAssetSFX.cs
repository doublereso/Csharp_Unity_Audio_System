//Part of the Unity Audio System project by Petr Yakyamsev
//github.com/doublereso/Csharp_Unity_Audio_System

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Audio;

[CreateAssetMenu(fileName = "Asset SFX", menuName = "AudioCustom/Asset SFX")]
public class SoAudioAssetSFX : ScriptableObject
{
    [Header("Audio Tracks and Clips")]
    [Tooltip("How much tracks you want in this asset?")]

    public SoAudioClips[] audioTracks;

    [Space(10)]

    [Tooltip("Drop the Mixer group here")]
    public AudioMixerGroup mixerGroup;
    [Tooltip("Sets the volume to zero")]
    public bool mute;
    [Tooltip("Bypass effects applied from filter components or global listener filters")]
    public bool bypassEffects;
    [Tooltip("When set global effects on the AudioListener will not be applied to the audio signal generated by the AudioSource. Does not apply if the AudioSource is playing into a mixer group.")]
    public bool bypassListenerEffects;
    [Tooltip("When set doesn't route the signal from an AudioSource into the global reverb associated with reverb zones")]
    public bool bypassReverbZones;
    [Tooltip("If set to true, the audio source will automatically start playing on awake")]
    public bool playOnAwake;
    [Tooltip("Set whether the audio clip replays after it finishes or not")]
    public bool loop;
    [Tooltip("128 is default, 0 is highest priority")]
    [Range(0, 255)]
    public int priority = 128;

    [Space(10)]

    [Tooltip("1 is default")]
    [Range(0.0f, 1.0f)]
    public float volume = 1.0f;
    [Tooltip("1 is default")]
    [Range(0.0f, 3.0f)]
    public float pitch = 1.0f;
    [Tooltip("0 is default, -1 is left, 1 is right")]
    [Range(-1.0f, 1.0f)]
    public float stereoPan = 0.0f;
    [Tooltip("0 is 2D, 1 is 3D")]
    [Range(0.0f, 1.0f)]
    public float spatialBlend = 0.0f;
    [Tooltip("0 ignores the reverb zone, 1 acts as normal reverb zone, 1.1 boosts reverberated signal by 10dB, 1 is default")]
    [Range(0.0f, 1.0f)]
    public float reverbZoneMix = 1.0f;

    [Space(10)]

    [Header("3D Sound Settings")]
    [Tooltip("amount of doppler effect applied to signal, 1 is default")]
    [Range(0.0f, 1.0f)]
    public float dopplerLevel = 1.0f;
    [Tooltip("Sets the spread angle (in degrees) of a 3d stereo or multichannel sound in speaker space. 0 - all sound channels are located at the same speaker location and is mono, 180 - sound channels spread equally between speakers, 360 = sound channels become reversed and hard panned (so if source is on the left, then sound will come from the right). Use it for smoothing the left-to-right position movement (like 45 degrees will make sound a bit more ambiently-wide). 0 is default.")]
    [Range(0.0f, 360.0f)]
    public float spread = 0.0f;
    [Tooltip("Sets how the AudioSource attenuates over distance")]
    public AudioRolloffMode rolloffMode;
    [Tooltip("Outside min distance volume starts to attenuate")]
    public float minDistance = 0.0f;
    [Tooltip("Distance where sound stops attenuating (or completely inaudible for LinearRolloff)")]
    public float maxDistance = 500.0f;

    [Space(10)]

    [Header("From Fmod (needs custom implementation)")]
    [Tooltip("How many sounds can be played atthe same time")]
    [Range(0, 64)]
    public int maxInstances = 64;
    [Tooltip("Pause between next instance of sound. 0 is default)")]
    [Range(0.0f, 60.0f)]
    public float cooldownSec = 0.0f;
    [Tooltip("Randomness in volume. 0 is default")]
    [Range(0.0f, 1.0f)]
    public float randomVolume = 0.0f;
    [Tooltip("Randomness in pitch. 0 is default")]
    [Range(0.0f, 1.0f)]
    public float randomPitch = 0.0f;
}
